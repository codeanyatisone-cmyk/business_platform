name: Deploy Full Stack Business Platform

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: business-platform/package-lock.json
        
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
        cache-dependency-path: fastapi-backend/pyproject.toml
        
    - name: Install frontend dependencies
      working-directory: ./business-platform
      run: |
        echo "📦 Installing frontend dependencies..."
        npm ci
        
    - name: Build frontend
      working-directory: ./business-platform
      run: |
        echo "🏗️ Building React application..."
        npm run build
        echo "✅ Frontend build completed successfully"
        
    - name: Install backend dependencies
      working-directory: ./fastapi-backend
      run: |
        echo "📦 Installing Python dependencies..."
        pip install --upgrade pip
        pip install .
        echo "✅ Backend dependencies installed successfully"
        
    - name: Deploy to server
      if: github.ref == 'refs/heads/main'
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: ${{ secrets.SERVER_PORT || 22 }}
        script: |
          set -e
          echo "🚀 Starting deployment process..."
          
          # Navigate to project directory
          cd /opt/business-project || {
            echo "❌ Project directory not found. Creating it..."
            sudo mkdir -p /opt/business-project
            cd /opt/business-project
            git clone https://github.com/codeanyatisone-cmyk/business_platform.git .
          }
          
          # Update repository
          echo "📥 Pulling latest changes..."
          git reset --hard HEAD
          git clean -fd
          git pull origin main
          
          # Install frontend dependencies
          echo "📦 Installing frontend dependencies..."
          cd business-platform
          npm ci
          
          # Build frontend
          echo "🏗️ Building React application..."
          npm run build
          
          # Verify build
          if [ ! -d "build" ]; then
            echo "❌ Build directory not found!"
            exit 1
          fi
          
          echo "✅ Frontend build completed successfully"
          
          # Install backend dependencies
          echo "📦 Installing backend dependencies..."
          cd fastapi-backend
          pip install --upgrade pip
          pip install .
          
          # Update static files
          echo "📁 Updating static files..."
          sudo mkdir -p /var/www/business-platform
          sudo cp -r ../business-platform/build/* /var/www/business-platform/
          sudo chown -R www-data:www-data /var/www/business-platform
          
          # Update serve process directory
          echo "🔄 Updating serve process..."
          sudo mkdir -p /root/apps/business-platform
          sudo cp -r ../business-platform/build/* /root/apps/business-platform/
          
          # Kill existing serve processes
          echo "🛑 Stopping existing serve processes..."
          pkill -f 'serve -s build -l 3000' || true
          sleep 2
          
          # Start new serve process
          echo "🚀 Starting new serve process..."
          cd /root/apps/business-platform
          nohup serve -s . -l 3000 > /tmp/business-platform.log 2>&1 &
          
          # Wait for process to start
          sleep 5
          
          # Verify deployment
          echo "🔍 Verifying deployment..."
          
          # Test local server
          if curl -f http://localhost:3000 > /dev/null 2>&1; then
            echo "✅ Local server (port 3000) is responding"
          else
            echo "❌ Local server (port 3000) is not responding"
            echo "📋 Serve process logs:"
            cat /tmp/business-platform.log
            exit 1
          fi
          
          # Test domain (if configured)
          if curl -f http://v4.business > /dev/null 2>&1; then
            echo "✅ Domain (v4.business) is responding"
          else
            echo "⚠️ Domain (v4.business) is not responding (may not be configured)"
          fi
          
          echo "🎉 Deployment completed successfully!"
          echo "📊 Deployment Summary:"
          echo "  - Frontend built and deployed"
          echo "  - Static files updated in /var/www/business-platform/"
          echo "  - Serve process running on port 3000"
          echo "  - Logs available at /tmp/business-platform.log"

